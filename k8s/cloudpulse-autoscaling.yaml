# CloudPulse Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: cloudpulse-ml-hpa
  namespace: cloudpulse
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: cloudpulse-ml
  minReplicas: 1
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
---
# CloudPulse Dashboard HPA
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: cloudpulse-dashboard-hpa
  namespace: cloudpulse
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: cloudpulse-dashboard
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 60
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 70
---
# CloudPulse Custom Resource Definition for Scaling Rules
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: scalingrules.cloudpulse.io
spec:
  group: cloudpulse.io
  versions:
  - name: v1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            properties:
              nodeId:
                type: string
              metric:
                type: string
              threshold:
                type: number
              action:
                type: string
                enum: ["scale_up", "scale_down"]
              replicas:
                type: integer
              cooldown:
                type: integer
          status:
            type: object
            properties:
              lastTriggered:
                type: string
              triggerCount:
                type: integer
              active:
                type: boolean
  scope: Namespaced
  names:
    plural: scalingrules
    singular: scalingrule
    kind: ScalingRule
---
# CloudPulse Scaling Controller Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudpulse-scaling-controller
  namespace: cloudpulse
  labels:
    app: cloudpulse-scaling-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cloudpulse-scaling-controller
  template:
    metadata:
      labels:
        app: cloudpulse-scaling-controller
    spec:
      serviceAccountName: cloudpulse-scaling-controller
      containers:
      - name: scaling-controller
        image: cloudpulse-scaling-controller:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: KUBECONFIG
          value: "/var/run/secrets/kubernetes.io/serviceaccount"
        - name: NAMESPACE
          value: "cloudpulse"
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "100m"
        volumeMounts:
        - name: kubeconfig
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          readOnly: true
      volumes:
      - name: kubeconfig
        secret:
          secretName: cloudpulse-scaling-controller-token
---
# Service Account for Scaling Controller
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cloudpulse-scaling-controller
  namespace: cloudpulse
---
# ClusterRole for Scaling Controller
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cloudpulse-scaling-controller
rules:
- apiGroups: [""]
  resources: ["pods", "nodes"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch", "update", "patch"]
- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["cloudpulse.io"]
  resources: ["scalingrules"]
  verbs: ["get", "list", "watch", "update", "patch"]
---
# ClusterRoleBinding for Scaling Controller
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cloudpulse-scaling-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cloudpulse-scaling-controller
subjects:
- kind: ServiceAccount
  name: cloudpulse-scaling-controller
  namespace: cloudpulse
---
# Secret for Scaling Controller Token
apiVersion: v1
kind: Secret
metadata:
  name: cloudpulse-scaling-controller-token
  namespace: cloudpulse
  annotations:
    kubernetes.io/service-account.name: cloudpulse-scaling-controller
type: kubernetes.io/service-account-token
